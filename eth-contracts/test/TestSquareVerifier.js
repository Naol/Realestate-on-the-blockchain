// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');
const Proof = require("../../zokrates/code/square/proof.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract('TestSquareVerifier', accounts => {
	const owner = accounts[0];

	// Test verification with correct proof
	// - use the contents from proof.json generated from zokrates steps
	it("Should successfully verify correct proof", async () => {
		this.contract = await Verifier.new({ from: owner });
		let verifiedProof = await this.contract.verifyTx.call(...Object.values(Proof.proof), Proof.inputs);

		assert.equal(verifiedProof, true, "Proof could not be verified");
	});

	// Test verification with incorrect proof
	it("Should not verify incorrect proof", async () => {
		let verifiedProof = await this.contract.verifyTx.call(...Object.values(Proof.proof), [34, 66]);

		assert.equal(verifiedProof, false);
	});
});
    


